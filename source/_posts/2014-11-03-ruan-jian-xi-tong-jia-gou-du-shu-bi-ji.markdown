---
layout: post
title: "软件系统架构读书笔记"
date: 2014-11-03 16:55:05 +0800
comments: true
categories: 
---
##软件架构概念
###系统的架构是一系列基本概念或者系统在其环境变量中变现出来的属性，体现在它的元素、关系以及设计和发展的原则中。
系统架构还涉及到利益相关者，包括软件使用者、开发者、提供支持、部署或者为其付钱的人。架构师的工作就是与大量不同的利益相关者，协同工作，满足他们的关注点，管理并激励他们，获得他们的意见。从而形成了另外的概念视点和视角。以后在详细介绍这两个概念。
###软件的元素和关系
####任何一个系统都是由许多部分组成的，这些部分称为模块、组件、部件或者子系统。我们遵循ISO标准，使用大家不太熟悉但在语义上中立的术语元素，来表示组成系统的部分。系统结构分为静态结构和动态结构。
###系统的基本属性
####系统的基本属性表现为两种不同的方式：外部可见行（系统所做的工作）和质量属性（系统如何完成工作）。
1）系统的外部可见行为定义了系统和环境之间的功能交互。
2）质量属性是系统外部可见性，非功能性的属性，例如性能、安全或者可伸缩性。
###设计和发展的原则
####对于一个结构良好、可维护的系统来说，有一种情况显而易见，就是它的实现是一致的。在架构设计的情景中，我们对架构原则进行定义：对指引架构定义的看法、方法或者意图的基本声明。
###架构元素：构建系统的基本组成部分。
应拥有一下关键属性：
*  一系列清晰定义的责任
*  清晰定义的边界
*  清晰定义的接口，它会定义元素为其他架构元素所提供的服务。
###利益相关者：可能是个人、团队或者组织
####关注和兴趣点
当你开始创建架构的时候，会发现你处理的是发现的过程，而不是捕获的过程，换言之，在系统开发生命周期早期过程中，你的利益相关者很可能无法精确描述出他的需求是什么。
####质量三角形:成本、质量、时间
架构师的职责就是要知道哪些属性对于那些人重要，并在必要的时候达成一种可接受的折中方案。
####利益相关者的重要性
###架构描述
是一系列产出物，它会以利益相关者能够理解的形式编写架构的文档，并说明架构如何满足他们的关注点，
“产出物”包括很多，不仅是架构模型，还有范围定义、约束和原则。
必须能够提供能够总结这个系统的整体概况，还必须分解为能够验证的、足够细的详细内容，并且所描述的系统能够基于此构建。
####所有利益相关者都需要理解与之相关的架构。
###核心概念之间的关系（图示）
